#!/usr/bin/env python3
"""
Script para limpar todos os arquivos gerados e resetar o projeto para um novo teste
"""
import os
import shutil
import glob

def clean_project():
    """Remove todos os arquivos gerados durante o processamento"""
    
    # Diret√≥rios para limpar completamente
    dirs_to_clean = [
        'tmp',
        'final', 
        'subs',
        'subs_ass',
        'burned_sub'
    ]
    
    print("üßπ Iniciando limpeza do projeto...")
    
    # Limpar diret√≥rios
    for dir_name in dirs_to_clean:
        if os.path.exists(dir_name):
            print(f"  üìÅ Limpando diret√≥rio: {dir_name}/")
            
            # Remover todos os arquivos do diret√≥rio
            for filename in os.listdir(dir_name):
                file_path = os.path.join(dir_name, filename)
                try:
                    if os.path.isfile(file_path):
                        os.remove(file_path)
                        print(f"    ‚ùå Removido: {file_path}")
                    elif os.path.isdir(file_path):
                        shutil.rmtree(file_path)
                        print(f"    üìÇ Removido diret√≥rio: {file_path}")
                except Exception as e:
                    print(f"    ‚ö†Ô∏è  Erro ao remover {file_path}: {e}")
        else:
            print(f"  ‚úÖ Diret√≥rio {dir_name}/ n√£o existe")
    
    
    # Recriar diret√≥rios vazios necess√°rios
    print("  üìÅ Recriando diret√≥rios necess√°rios...")
    for dir_name in dirs_to_clean:
        os.makedirs(dir_name, exist_ok=True)
        print(f"    ‚úÖ Criado: {dir_name}/")
    
    print("\nüéâ Limpeza conclu√≠da! O projeto est√° pronto para um novo teste.")
    print("\nüìã Pr√≥ximos passos:")
    print("1. Execute o main.py ou o notebook")
    print("2. Forne√ßa uma nova URL do YouTube")
    print("3. Configure as op√ß√µes desejadas")

if __name__ == "__main__":
    clean_project()
